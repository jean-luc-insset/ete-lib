<?xml version="1.0" encoding="UTF-8"?>

<root xmlns:ete="http://www.jldeleage.com/mda/ns/jld.html"
        method="text"
        xmlns="http://www.jldeleage.com/mda/ns/jld.html"
        href="generated-sources/ete/fr/insset/ete/dao/AbstractFacade.java"
        >
package fr.insset.ete.dao;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;

/**
 *
 * @author jldeleage
 */
public abstract class AbstractFacade&lt;T&gt; {
    private Class&lt;T&gt; entityClass;

    public AbstractFacade(Class&lt;T&gt; entityClass) {
        this.entityClass = entityClass;
    }

    protected abstract EntityManager getEntityManager();

    public void create(T entity) {
        getEntityManager().persist(entity);
    }

    public void edit(T entity) {
        getEntityManager().merge(entity);
    }

    public void remove(T entity) {
        getEntityManager().remove(getEntityManager().merge(entity));
    }

    public T find(Object id) {
        return getEntityManager().find(entityClass, id);
    }

    public List&lt;T&gt; findAll() {
<!--        Logger logger = Logger.getLogger("");
        logger.log(Level.INFO, "Recherche de tous les elements de type " + getClass().getName());-->
        javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();
        cq.select(cq.from(entityClass));
        return getEntityManager().createQuery(cq).getResultList();
    }

    public List&lt;T&gt; findRange(int[] range) {
        javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();
        cq.select(cq.from(entityClass));
        javax.persistence.Query q = getEntityManager().createQuery(cq);
        q.setMaxResults(range[1] - range[0] + 1);
        q.setFirstResult(range[0]);
        return q.getResultList();
    }

    public int count() {
        javax.persistence.criteria.CriteriaQuery cq = getEntityManager().getCriteriaBuilder().createQuery();
        javax.persistence.criteria.Root&lt;T&gt; rt = cq.from(entityClass);
        cq.select(getEntityManager().getCriteriaBuilder().count(rt));
        javax.persistence.Query q = getEntityManager().createQuery(cq);
        return ((Long) q.getSingleResult()).intValue();
    }
    
}

</root>
